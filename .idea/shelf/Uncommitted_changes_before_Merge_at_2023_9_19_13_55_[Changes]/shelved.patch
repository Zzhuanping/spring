Index: ReadMe.md
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+># 2023年9月4日\r\n> 一 .不使用new创建对象\r\n * 反射\r\n\r\n> 二.如何使用反射创建的对象？<br>  \r\n\r\n1. 加载bean.xml文件\r\n2. 对xml文件进行解析操作\r\n``` \r\nApplicationContext context =\r\n new ClassPathXmlApplicationContext(\"bean.xml\");\r\n    User zhang = (User)context.getBean(\"user\");         \r\n```        \r\n3. 获取xml文件bean的id和class属性\r\n\r\n> 三.创建好的对象会放在哪儿\r\n\r\n一个map集合中，Map<key,BeanDefinition> beanDefinitionMap函数中<br>\r\n**key**: 唯一标识<br>\r\n**value**: 类的定义，就是从这儿获取类的字节码文件\r\n\r\n# 2023年9月5日\r\n> 一. log4j2 添加日志\r\n\r\n用于替换system.out.print()\r\n#### 错误等级: TRACE<DUBUG<INFO(使用最多)<WARN<ERROR<br>\r\n\r\n> 二. 容器: IoC\r\n\r\n“ 控制反转 ” 一种面向对象的编程法则并非技术，能够设计出松耦合、更优良的程序\r\nspring通过使用IoC容器来管理所有 **Java** 对象的实例化和初始化，控制对象与对象之间的依赖关系。<br>\r\n由IoC容器管理的所有Java对象称为 **spring bean**，和使用new创建的对象没有任何区别\r\n\r\n### 步骤\r\n+ 创建xml配置文件，bean定义信息beanDefinition\r\n+ 通过抽象接口 BeanDefinitionReader中的不同方法读取不同类型的配置文件\r\n+ 通过以上的函数将**bean定义信息**加载到IoC容器中\r\n+ IoC中BeanFactory工厂+ **反射** 将bean给实例化<br>\r\n反射实现<br>\r\n``\r\nUser user = Class.forName(\"类名\");\r\nuser.getDeclaredConstructor().newInstance();   \r\n        创立对象\r\n``\r\n+ 初始化对象之后通过getBean()获取最终可以使用的对象\r\n\r\n### 控制反转\r\n- 将对象的创建权利交给第三方容器 **IoC** 管理\r\n- 把对象和对象之间的关系的维护权也交出去，由第三方容器管理\r\n\r\n**依赖注入**（DI） 用于实现这种思想\r\n\r\n> 三. 1-bean管理xml\r\n1. 新建xml文件<br>\r\n`` 创建User类的对象：<bean id=\"user\" class=\"com.zhang.jie.User\"></bean>``\r\n\r\n+ 通过id获取bean\r\n``` User user = (User)context.getBean(\"user\");```\r\n\r\n+ 通过类型\r\n``(User)context.getBean(User.class)``\r\n\r\n+ 通过 Id 和类型\r\n``context.getBean(\"user\", User.class)``\r\n\r\n以上三种方式获取到的bean都是一样的\r\n\r\n# 2023年9月7日\r\n\r\n1. 通过 **类型** 得到bean时，xml文件中指定类型的bean有且只有一个：单实例\r\n\r\n`` 报错: expected single matching bean but found 2: user,user1``\r\n\r\n# 2023年9月8日\r\n\r\n> 一. 依赖注入\r\n\r\n类有属性，创建对象过程中，向属性设置值\r\n\r\n### 1. 基于set方法\r\n1. 传概念类定义属性，类文件中写好set方法 toString等\r\n\r\n``  \r\n<bean id=\"book\" class=\"com.zhang.jie.di.Book\">\r\n<property name=\"name\" value=\"java开发\"/>\r\n<property name=\"author\" value=\"四川轻化工大学\"/>\r\n</bean>\r\nname对应类中的属性，value对应需要设置的值\r\n``\r\n\r\n\r\n### 2. 基于构造器\r\n``    \r\n<bean id=\"book2\" class=\"com.zhang.jie.di.Book\">\r\n<constructor-arg name=\"name\" value=\"单片机入门\"/>\r\n<constructor-arg name=\"author\" value=\"入门到送外卖\"/>\r\n </bean>\r\n``\r\n\r\n**name**对应类中的属性，**value**对应需要设置的值\r\n\r\n### 3. 传递特殊值\r\n\r\n1. 字面量赋值：<br>\r\n\r\n```<property name=\"author\" value=\"四川轻化工大学\"/> ```\r\n\r\n2. 传递空值\r\n\r\n``` \r\n <property name=\"other\" >\r\n            <null/>\r\n        </property>\r\n不能直接把value处写成null，会被识别成字符串\r\n```\r\n3. xml实体\r\n\r\n转义特殊字符&lt; |||| &gt;\r\n\r\n4. CDATA节\r\n\r\n```\r\n<property name=\"other\" >\r\n           <value> <![CDATA[ 这里写内容 ]]> </value>\r\n        </property>\r\n```\r\n\r\n### 4. 特殊类型赋值\r\n\r\n1. 对象赋值\r\n\r\n+ 外部bean\r\n\r\n```\r\n<bean id=\"dept\" class=\"com.zhang.jie.ditest.Dept\">\r\n        <property name=\"dname\" value=\"AD\"/>\r\n    </bean>\r\n      ===========================================    \r\n    <bean id=\"emp\" class=\"com.zhang.jie.ditest.emp\">\r\n<!--        普通类型注入-->\r\n        <property name=\"name\" value=\"lisa\"/>\r\n        <property name=\"age\" value=\"20\"/>\r\n<!--        对象注入 通过 <ref>  拿到bean-->\r\n        <property name=\"dept\" ref=\"dept\"/>\r\n    </bean>\r\n```\r\n\r\n重点是**ref**引用\r\n\r\n# 2023年9月9日\r\n\r\n+ 内部bean的方式\r\n```\r\n<bean id=\"emp1\" class=\"com.zhang.jie.ditest.emp\">\r\n        <property name=\"name\" value=\"小帅\"/>\r\n        <property name=\"age\" value=\"21\"/>\r\n<!--将需要赋值的类放到pro标签中-->\r\n        <property name=\"dept\">\r\n            <bean id=\"dept1\" class=\"com.zhang.jie.ditest.Dept\">\r\n                <property name=\"dname\" value=\"财务中心\"/>\r\n            </bean>\r\n        </property>\r\n    </bean>\r\n```\r\n+ 级联样式是在外联的基础上改变值<br>\r\n\r\n**注意** 使用级联需要在emp类中添加上层类的getter\r\n```\r\n    <bean id=\"dept3\" class=\"com.zhang.jie.ditest.Dept\">\r\n        <property name=\"dname\" value=\"管教中心（级联）\"/>\r\n    </bean>\r\n\r\n    <bean id=\"emp\" class=\"com.zhang.jie.ditest.emp\">\r\n        <property name=\"name\" value=\"王大\"/>\r\n        <property name=\"age\" value=\"20\"/>\r\n        <property name=\"dept\" ref=\"dept3\"/>\r\n        <property name=\"dept.dname\" value=\"null\"/>\r\n    </bean>\r\n   \r\n```\r\n2. 数组赋值\r\n\r\n```\r\n在类中新建一个loves的数组，通过array标签多个赋值\r\n private String[] loves;\r\n <property name=\"loves\">\r\n            <array>\r\n                <value>eat</value>\r\n                <value>sleep</value>\r\n                <value>drink</value>\r\n            </array>\r\n        </property>\r\n\r\n```\r\n\r\n# 2023年9月11日\r\n\r\n3. 集合赋值--list\r\n\r\n```\r\n<bean id=\"dept\" class=\"com.zhang.jie.ditest.Dept\">\r\n        <property name=\"dname\" value=\"环境保护\"/>\r\n        <property name=\"emplist\">\r\n1.   用list标签来引入需要用的值，这里是对象所以用ref，一般使用 value\r\n            <list>\r\n                <ref bean=\"emp1\"/>\r\n                <ref bean=\"emp2\"/>\r\n            </list>\r\n        </property>\r\n    </bean>\r\n1. 第一个员工信息\r\n    <bean id=\"emp1\" class=\"com.zhang.jie.ditest.emp\">\r\n        <property name=\"name\" value=\"zhou\"/>\r\n        <property name=\"age\" value=\"20\"/>\r\n    </bean>\r\n2. 第二个员工信息\r\n    <bean id=\"emp2\" class=\"com.zhang.jie.ditest.emp\">\r\n        <property name=\"name\" value=\"huan\"/>\r\n        <property name=\"age\" value=\"21\"/>\r\n    </bean>\r\n```\r\n\r\n# 2023年9月12日\r\n\r\n1. Map集合赋值\r\n\r\n```\r\n1.在类中创建好map属性\r\n\r\n  private Map<String,Teacher> teacherMap;\r\n  \r\n2.新建xml文件，创建map中需要传入的teacher对象\r\n\r\n    <bean id=\"teacone\" class=\"com.zhang.jie.dimap.Teacher\">\r\n        <property name=\"tname\" value=\"王老师\"/>\r\n        <property name=\"tid\" value=\"01\"/>\r\n    </bean>\r\n\r\n    <bean id=\"teactwo\" class=\"com.zhang.jie.dimap.Teacher\">\r\n        <property name=\"tname\" value=\"刘老师\"/>\r\n        <property name=\"tid\" value=\"02\"/>\r\n    </bean>\r\n\r\n3. 新建学生bean，并把老师的对象用map标签entry标签作内嵌赋值\r\n\r\n <bean id=\"stu\" class=\"com.zhang.jie.dimap.Student\">\r\n<!--        普通-->\r\n        <property name=\"sname\" value=\"xiaowang\"/>\r\n        <property name=\"sid\" value=\"011\"/>\r\n<!--        Map集合-->\r\n        <property name=\"teacherMap\">\r\n            <map>\r\n<!--        第一个教师对象-->\r\n                <entry>\r\n                    <key>\r\n                        <value>1000</value>\r\n                    </key>\r\n                    <ref bean=\"teacone\"/>\r\n                </entry>\r\n<!--                第二个对象-->\r\n                <entry>\r\n                    <key>\r\n                        <value>2000</value>\r\n                    </key>\r\n                    <ref bean=\"teactwo\"/>\r\n                </entry>\r\n            </map>\r\n        </property>\r\n    </bean>\r\n\r\n```\r\n2. 给引用类型集合的bean赋值\r\n\r\n```\r\n\r\n1. 新建xml文件，改写配置，添加上util单元\r\n\r\n<beans xmlns=\"http://www.springframework.org/schema/beans\"\r\n       xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\r\n       xmlns:util=\"http://www.springframework.org/schema/util\"\r\n       xsi:schemaLocation=\"http://www.springframework.org/schema/beans\r\n       http://www.springframework.org/schema/beans/spring-beans.xsd\r\n       http://www.springframework.org/schema/util\r\n       http://www.springframework.org/schema/util/spring-util.xsd\">\r\n\r\n2.正常创建好老师的bean、课程的bean\r\n\r\n3.使用util标签，map需要用entry标签赋值\r\n\r\n <util:list id=\"lessonList\">\r\n        <ref bean=\"lessC\"/>\r\n        <ref bean=\"lessM\"/>\r\n    </util:list>\r\n    <util:map id=\"teacherMap\">\r\n        <entry>\r\n            <key>\r\n                <value>100</value>\r\n            </key>\r\n            <ref bean=\"teacC\"/>\r\n        </entry>\r\n        <entry>\r\n            <key>\r\n                <value>200</value>\r\n            </key>\r\n            <ref bean=\"teacM\"/>\r\n        </entry>\r\n    </util:map>\r\n\r\n4.在学生类中使用ref属性来得到util的值\r\n\r\n <bean id=\"stu\" class=\"com.zhang.jie.dimap.Student\">\r\n<!--       普通-->\r\n        <property name=\"sname\" value=\"小王\"/>\r\n        <property name=\"sid\" value=\" 001\"/>\r\n<!--        list和map属性\r\n            ref引用的名字需要和util的id相同\r\n-->\r\n        <property name=\"lessonList\" ref=\"lessonList\"/>\r\n        <property name=\"teacherMap\" ref=\"teacherMap\"/>\r\n    </bean>\r\n\r\n```\r\n\r\n3. p命名空间赋值\r\n```\r\n  添加约束\r\n  xmlns:p=\"http://www.springframework.org/schema/p\"\r\n \r\n  新建bean对象，使用属性赋值而不是标签\r\n    <bean id=\"student1\" class=\"com.zhang.jie.dimap.Student\"\r\n    p:sname=\"zhangjie\" p:sid=\"100\" p:teacherMap-ref=\"teacherMap\" p:lessonList-ref=\"lessonList\">\r\n    </bean>\r\n```\r\n\r\n# 2023年9月13日\r\n\r\n1. 引用外部属性文件\r\n\r\n> 有多个bean时，方便修改\r\n\r\n### 以连接数据库为例\r\n\r\n1. 新建properties后缀文件\r\n```\r\n\r\njdbc.user=root\r\njdbc.password=10086\r\njdbc.url=jdbc:mysql://localhost:3306/test\r\njdbc.driver=com.mysql.jdbc.Driver\r\n\r\n```\r\n2. 新建xml文件添加规范\r\n\r\n```\r\n xmlns:context=\"http://www.springframework.org/schema/context\"\r\n \r\n  xsi:schemaLocation=\"\r\n       http://www.springframework.org/schema/context\r\n       http://www.springframework.org/schema/context/spring-context.xsd\r\n\r\n```\r\n3. 注入信息\r\n\r\n```\r\n\r\n<!--    引入外部属性文件-->\r\n\r\n    <context:property-placeholder location=\"classpath:jdbc.properties\"/>\r\n\r\n<!--    数据库信息的注入-->\r\n\r\n    <bean id=\"DruidDataSource\" class=\"com.alibaba.druid.pool.DruidDataSource\">\r\n<!--        表达式 ${ }     -->\r\n        <property name=\"url\" value=\"${jdbc.url}\"/>\r\n        <property name=\"password\" value=\"${jdbc.password}\"/>\r\n        <property name=\"username\" value=\"${jdbc.user}\"/>\r\n        <property name=\"driverClassName\" value=\"${jdbc.driver}\"/>\r\n\r\n    </bean>\r\n\r\n```\r\n\r\n### 与传统连接数据库方式对比\r\n\r\n```\r\n   DruidDataSource dataSource = new DruidDataSource();\r\n        dataSource.setUrl(\"jdbc:mysql://localhost:3306/test\");\r\n        dataSource.setUsername(\"root\");\r\n        dataSource.setPassword(\"10086\");\r\n        dataSource.setDriverClassName(\"com.mysql.jdbc.Driver\");\r\n\r\n```\r\n\r\n###  bean的作用域\r\n\r\n通过配置bean标签中scop属性来指定bean的作用范围\r\n\r\n1. singleton 默认\r\n\r\n>在IoC容器中只有一个对象实例 ---IoC容器初始化时\r\n\r\n2. prototype \r\n\r\n> 这个bean始终有多个实例    ----获取bean时\r\n\r\n```\r\n<bean id=\"orders\" class=\"com.zhang.jie.scope.Order\" scope=\"prototype\"/>\r\n重复getBean得到的实例不同\r\n\r\n```\r\n\r\n# 2023年9月14日\r\n\r\n> 一 **bean**生命周期\r\n\r\n1. bean对象的创建（调用无参构造）<br>\r\n\r\n新建一个名为User的类\r\n\r\n```\r\n   public User() {\r\n        System.out.println(\"1 调用无参数构造 创建bean对象\");\r\n    }\r\n```\r\n\r\n2. 给bean对象设置相关属性\r\n\r\n```\r\n public void setName(String name) {\r\n        this.name = name;\r\n\r\n        System.out.println(\"2 给bean对象设置属性值\");\r\n    }\r\n```\r\n\r\n3. bean后置处理器（初始化之前）\r\n\r\n```\r\n新建一个类MyBeanPost实现BeanPostProcessor接口\r\n覆写方法\r\n    @Override\r\n    public Object postProcessBeforeInitialization(Object bean, String beanName) throws BeansException {\r\n\r\n        System.out.println(\"3 bean的后置处理器--在初始化之前启动\");\r\n        System.out.println(beanName+\"::\"+ bean);\r\n\r\n        return bean;\r\n    }\r\n\r\n\r\n```\r\n\r\n4. bean对象的初始化（调用指定的方法）\r\n\r\n```\r\nxml中bean标签的属性值\r\ninit-method=\"initme\" \r\nuser类中\r\npublic void initme(){\r\nSystem.out.println(\"4 调用指定方法用于初始化\");\r\n    }\r\n\r\n```\r\n\r\n5. bean的后置处理器（处理之后）\r\n\r\n```\r\n @Override\r\n    public Object postProcessAfterInitialization(Object bean, String beanName) throws BeansException {\r\n\r\n\r\n        System.out.println(\"5 bean的后置处理器--在初始化以后执行\");\r\n        System.out.println(beanName+\"::\"+ bean);\r\n\r\n        return bean;\r\n    }\r\n\r\n```\r\n\r\n6. bean对象创建完成了，可以被正常使用\r\n\r\n```\r\n\r\n注意这里使用的不是Application接口，而是原生类方便后面调试销毁方法\r\n\r\n ClassPathXmlApplicationContext context = new ClassPathXmlApplicationContext(\"bean-life.xml\");\r\n        User user1 = (User)context.getBean(\"demo\");\r\n        System.out.println(\"6 使用bean\"+user1);\r\n```\r\n\r\n7. bean的对象销毁\r\n\r\n```\r\nUser类：\r\n   public void destm(){\r\n            System.out.println(\"7 bean调用指定方法用于销毁\");\r\n    }\r\n    \r\nxml中bean标签的属性值  \r\n\r\ndestroy-method=\"destm\"  \r\n\r\n测试文件\r\n  context.close();\r\n\r\n```\r\n8. IoC容器关闭\r\n\r\n> 二 FactoryBean机制\r\n\r\n配置一个factorybean类型的bean，在获取的时候并不是得到class中定义的类\r\n而是得到getObject()方法的返回值，用于将复杂组件的创建过程给封装屏蔽掉，只留下简洁的使用界面\r\n\r\n1. 创建一个类实现接口FactoryBean<User>\r\n\r\n```\r\n\r\n覆写两个方法，并把希望返回的对象写成返回值\r\npublic class MyFactoryBean implements FactoryBean<User> {\r\n    @Override\r\n    public User getObject() throws Exception {\r\n        return new User();\r\n    }\r\n\r\n    @Override\r\n    public Class<?> getObjectType() {\r\n//         反射机制拿到想要创建类的字节码文件    \r\n        return User.class;\r\n    }\r\n\r\n\r\n}\r\n```\r\n\r\n2. 配置xml文件\r\n\r\n```\r\n\r\n<bean id=\"user\" class=\"com.zhang.jie.factorybean.MyFactoryBean\"/>\r\n不是得到该类的实例，而是该类方法中返回值的实例\r\n\r\n\r\n```\r\n\r\n\r\n> 三 基于xml的自动装配\r\n\r\ncontroller service dao三层结构 其中service和dao分别作为接口用于实现具体方法\r\n\r\n在前置层中设置好下一层的属性，并使创建set方法用于赋值\r\n\r\n在xml文件中利用bean中的 **autowire=\"byType\"**   属性完成自动寻找对应类型的方法\r\n```\r\n<bean id=\"controller\" class=\"com.zhang.jie.auto.controller.UserController\" autowire=\"byType\"/>\r\n\r\n    <bean id=\"service\" class=\"com.zhang.jie.auto.service.UserServiceimp\" autowire=\"byType\"/>\r\n    \r\n    <bean id=\"dao\" class=\"com.zhang.jie.auto.dao.UserDaoimp\"/>\r\n\r\n```\r\n这样，在controller这个bean中会自动的寻找set方法对应的那个实例并将它给实例化\r\n\r\n\r\n第二种 在xml文件中通过autowrie=byname这种方式完成装配，这种方式更加直观通过bean的id和类中需要装配的类的属性名相同即可\r\n\r\n```\r\n类中：\r\n\r\n   private UserDao userDao;\r\n   \r\n   private UserService userService;\r\n   \r\nxml文件中：\r\n <bean id=\"controller\" class=\"com.zhang.jie.auto.controller.UserController\" autowire=\"byName\"/>\r\n\r\n        <bean id=\"userService\" class=\"com.zhang.jie.auto.service.UserServiceimp\" autowire=\"byName\"/>\r\n\r\n        <bean id=\"userDao\" class=\"com.zhang.jie.auto.dao.UserDaoimp\"/>\r\n\r\n```\r\n\r\n# 2023年9月15日\r\n\r\n基于**注解**管理bean\r\n 代码中一种特殊的标记，格式：@注解名(多个属性=属性值)\r\n\r\n1. 引入相关依赖\r\n   + log4j2日志输出\r\n   + spring\r\n\r\n2. 开启组件扫描\r\n    ```\r\n   添加context的命名空间\r\n   xmlns:context=\"http://www.springframework.org/schema/context\"\r\n       xsi:schemaLocation=\"\r\n       http://www.springframework.org/schema/context\r\n        http://www.springframework.org/schema/context/spring-context.xsd\r\n   \r\n   使用标签context规范需要扫描的包路径\r\n    <context:component-scan base-package=\"zhou.huan\"/>\r\n   \r\n   ```\r\n> 使用注解来定义类成spring bean，用于标记类的注解\r\n\r\n### @component\r\n \r\n+ 该注解描述spring中的bean是一个泛化的概念，仅仅表示容器中的一个组件（Bean），并且可以作用于任何的层次中，使用时只需要在类上标注即可\r\n\r\n```\r\n\r\n@Component(value = \"nihao\")\r\n \r\n //bean id=\"名字\" 如果默认就是类名的首字母小写\r\n\r\n```\r\n\r\n### @Repository\r\n\r\n+ 用于标记数据访问层（Dao），功能与component相同\r\n\r\n### @Service\r\n\r\n+ 用于标记业务层，并将其视为spring所管理的bean\r\n\r\n### @Controller\r\n\r\n+ 用于标记控制层，并将其视为spring所管理的bean\r\n\r\n> 用于赋值注入的注解\r\n\r\n### @Autowried\r\n\r\n+  单独使用时 默认根据类型装配byType（属性）\r\n  +  注解范围：\r\n      + 构造器\r\n      ```\r\n         private UserService userService;\r\n\r\n      @Autowired\r\n      public UserController(UserService userService) {\r\n          this.userService = userService;\r\n      }\r\n     ``` \r\n      + setter方法\r\n      ```\r\n         private UserService userService;\r\n        @Autowired\r\n        public void setUserService(UserService userService) {\r\n        this.userService = userService;\r\n        }\r\n     \r\n     ```\r\n      \r\n      + 形参\r\n       \r\n      ```\r\n     就是在构造器的参数上打注解\r\n      private UserService userService;\r\n\r\n      public UserController(@Autowired  UserService userService) {\r\n          this.userService = userService;\r\n      }\r\n     ``` \r\n      + 属性（对象）\r\n      ```\r\n      属性注入\r\n      @Autowired //会根据类型自动找到对象接口，完成注入\r\n      private UserService userService;\r\n\r\n      @Autowired\r\n      private UserDao userDao;\r\n\r\n\r\n     ``` \r\n      + 注解<br>\r\n      \r\n      ```\r\n        \r\n         // value是bean的名称，可以解决多个实现类冲突的问题\r\n        @Qualifier(value = \"\")\r\n           @Autowired\r\n         @Qualifier(value = \"userReditsDaoimp\")\r\n         private UserDao userDao;\r\n\r\n            public UserServiceImp(@Qualifier(\"userDaoImp\") @Autowired UserDao userDao) {\r\n            this.userDao = userDao;\r\n            }\r\n      \r\n        ```\r\n     \r\n在注入时，被注入的bean必须存在不然会报错，因为存在required()\r\n\r\n\r\n### Resource\r\n\r\n+ 适用范围\r\n  + 属性\r\n  + setter方法\r\n  \r\n+ 所需依赖\r\n  + 1.8< jdk | jdk > 11 才需要依赖\r\n\r\n\r\n该注解属于是JDK的一部分，是标准注解更加具有通用性\r\n@Autowried注解是spring框架自己的\r\n\r\n@Resource默认byName，没有指定名称时，使用属性名作为name，通过name找不到的话会自动启用byType\r\n\r\n@Autowried 默认byType 想要使用名称装配需要搭配上@Qualifier\r\n\r\n1. 默认使用id注入\r\n```\r\n被注入的类id为myUserServiceImp \r\n        @Service(value = \"myUserServiceImp\")\r\n    public class UserServiceImp implements UserService {\r\n    \r\n    \r\n    将id放入该标签的name属性中\r\n  @Resource(name = \"myUserServiceImp\")        //根据名称注入--名字就是需要注入类的id\r\n    private UserService userService;\r\n```   \r\n\r\n2. 使用属性名注入\r\n```\r\n使用属性名注入--不需要写注解的属性值\r\n    @Service(value = \"myUserServiceImp\")\r\n    public class UserServiceImp implements UserService {\r\n    \r\n    \r\n    \r\n    @Resource     //根据属性名和类的id去寻找匹配\r\n    private UserService myUserServiceImp;\r\n \r\n\r\n```\r\n\r\n3. 什么也不写的情况下识别成byType\r\n\r\n```\r\n\r\n  @Resource // 不写name属性\r\n    private UserDao userDao;\r\n    \r\n    //类名和属性名不相同，说明是按照类型注入\r\n    @Repository(value = \"myUserDaoImp\")\r\n    public class UserDaoImp implements UserDao {\r\n\r\n\r\n```\r\n\r\n\r\n# 2023年9月16日\r\n\r\n> 全注解开发----使用配置类来替代配置文件xml\r\n\r\n```\r\n打上标记类的注解\r\n@Configuration      //标志为配置类\r\n@ComponentScan(\"zhou.huan.bean\")        //开启组件扫描\r\n\r\n启动类中新建AnnotationConfigApplicationContext，并得到配置类的class文件\r\n\r\nApplicationContext context =\r\n                new AnnotationConfigApplicationContext(SpringConfig.class);\r\n```\r\n\r\n### IoC的实现\r\n\r\n> 一 反射回顾\r\n\r\n对于任意一个类都能知道他的所有属性和方法，对于任意一个对象都能调用它的任意方法和属性，这种动态实时获取对象方法的功能就是反射机制\r\n\r\n反射机制指的就是能够运行时获取自身的信息。\r\n\r\n####  Class class1 = Car.class;   //通过类名.class\r\n\r\n#### Class class2 = new Car().getClass(); // getClass()\r\n\r\n#### Class class3 = Class.forName(\"com.zhang.jie.Car\") ;   //Class.forName(全路径)\r\n\r\n\r\n### 实例化对象的方法\r\n\r\n        Car car = (Car) class1.getDeclaredConstructor().newInstance();\r\n\r\n        通过Class提供的方法，然后将返回值返回到原本的类再类型强转\r\n\r\n### 拿到类中的构造器\r\n\r\n```\r\n      \r\n得到构造器数组getConstructors，\r\n        1. getDeclaredConstructors()得到全部的构造方法包括私有。\r\n        2. getConstructors只能拿到类中的public构造方法\r\n      \r\n      Constructor[] constructors = class1.getConstructors();\r\n      \r\n      Constructor[] declaredConstructor = class1.getDeclaredConstructors();\r\n\r\n        for (Constructor c :declaredConstructor) {\r\n            System.out.println(\"构造器名字： \"+c.getName()+\"构造器的参数个数\"+c.getParameterCount());\r\n        }\r\n```\r\n针对使用public权限的构造器\r\n\r\n```\r\n\r\nConstructor constructor = class1.getConstructor(String.class, int.class, String.class);\r\n\r\nCar car = (Car)constructor.newInstance(\"宾利\", 10, \"黑色\");\r\n```\r\n\r\n\r\n使用private权限的构造器，除了需要设置访问权限以外别的操作都一样\r\n\r\n```\r\n\r\nConstructor constructor02 = class1.getConstructor(String.class, int.class, String.class);\r\n\r\nconstructor02.setAccessible(true);  //设置访问权限为true\r\n\r\nCar car2 = (Car)constructor.newInstance(\"huangse\", 10, \"黑色\");\r\n\r\n```\r\n\r\n### 得到属性\r\n\r\n1. public\r\n````\r\n\r\n//    得到所有公开属性，返回数组\r\n//    Field[] fields = class1.getFields();\r\n\r\n````\r\n2. private\r\n\r\n```\r\n\r\n    Car car = (Car)class1.getDeclaredConstructor().newInstance();\r\n    \r\n     Field[] declaredField = class1.getDeclaredFields(); //拿到所有包括私有在内的属性\r\n     \r\n    for (Field f1 : declaredField) {\r\n    \r\n        if (f1.getName().equals(\"name\")){\r\n\r\n            f1.setAccessible(true); //设置控制权限\r\n            \r\n            f1.set(car,\"tianya\");   //调用方法为其赋值\r\n\r\n        }\r\n        System.out.println(\"属性名\"+f1.getName());\r\n      \r\n    }\r\n\r\n```\r\n\r\n### 得到普通方法\r\n\r\n> 实例化对象\r\n\r\n```\r\n   Car car = new Car(\"BWM\",12,\"write\");\r\n       Class class1=  car.getClass();\r\n\r\n```\r\n\r\n1. public\r\n\r\n```\r\n   Method[] methods = class1.getMethods(); //得到公开方法\r\n        for (Method me: methods) {\r\n//            System.out.println(\"方法名： \"+me.getName());\r\n\r\n\r\n\r\n            if (me.getName().equals(\"toString\")){\r\n\r\n                System.out.println(\"toString 执行： \"+(String)me.invoke(car));//            执行某个方法\r\n            }\r\n        }\r\n\r\n```\r\n\r\n2. private\r\n\r\n```\r\n\r\n  Method[] me2 = class1.getDeclaredMethods(); //得到包括私有在内的所有方法\r\n        for (Method m1:me2\r\n             ) {\r\n\r\n            if (m1.getName().equals(\"run\")){\r\n                m1.setAccessible(true);  //添加允许权限\r\n                m1.invoke(car);  //执行指定方法\r\n\r\n            }\r\n            System.out.println(m1.getName());\r\n\r\n        }\r\n\r\n```\r\n\r\n> 二 手写**IoC**控制反转和**DI**依赖注入\r\n\r\n1. 创建测试模块\r\n2. 创建测试类\r\n3. 创建两个注解\r\n4. 创建bean容器接口ApplicationContext定义方法，返回对象\r\n5. 实现bean接口\r\n   1. 返回对象\r\n   2. 根据包规则加载bean\r\n      > 例子：com.zhang.jie 扫描这个全路径，并找到所有的类，并根据找到的类上标记完成相应操作 如有@Bean，则反射完成实例化\r\n   \r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/ReadMe.md b/ReadMe.md
--- a/ReadMe.md	(revision 1a2da8958760c6b7dc62c5534b2f486302424564)
+++ b/ReadMe.md	(date 1695102948744)
@@ -903,6 +903,8 @@
 
 > 二 手写**IoC**控制反转和**DI**依赖注入
 
+# 2023年9月19日
+
 1. 创建测试模块
 2. 创建测试类
 3. 创建两个注解
Index: .idea/dictionaries/zhouhuanping.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/dictionaries/zhouhuanping.xml b/.idea/dictionaries/zhouhuanping.xml
new file mode 100644
--- /dev/null	(date 1695102948740)
+++ b/.idea/dictionaries/zhouhuanping.xml	(date 1695102948740)
@@ -0,0 +1,3 @@
+<component name="ProjectDictionaryState">
+  <dictionary name="zhouhuanping" />
+</component>
\ No newline at end of file
Index: .idea/workspace.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"UTF-8\"?>\r\n<project version=\"4\">\r\n  <component name=\"AutoImportSettings\">\r\n    <option name=\"autoReloadType\" value=\"SELECTIVE\" />\r\n  </component>\r\n  <component name=\"ChangeListManager\">\r\n    <list default=\"true\" id=\"17dbe8b4-afbc-49e7-869b-4ac8e2f9f663\" name=\"Changes\" comment=\"2023年9月17日\">\r\n      <change afterPath=\"$PROJECT_DIR$/spring-self_do-Ioc/src/main/java/com/zhang/jie/anno/Bean.java\" afterDir=\"false\" />\r\n      <change afterPath=\"$PROJECT_DIR$/spring-self_do-Ioc/src/main/java/com/zhang/jie/anno/Di.java\" afterDir=\"false\" />\r\n      <change afterPath=\"$PROJECT_DIR$/spring-self_do-Ioc/src/main/java/com/zhang/jie/bean/AnnotationAppcationContext.java\" afterDir=\"false\" />\r\n      <change afterPath=\"$PROJECT_DIR$/spring-self_do-Ioc/src/main/java/com/zhang/jie/bean/ApplicationContext.java\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/.idea/compiler.xml\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/.idea/compiler.xml\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/.idea/encodings.xml\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/.idea/encodings.xml\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/.idea/workspace.xml\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/.idea/workspace.xml\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/spring-self_do-Ioc/pom.xml\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/spring-self_do-Ioc/pom.xml\" afterDir=\"false\" />\r\n    </list>\r\n    <option name=\"SHOW_DIALOG\" value=\"false\" />\r\n    <option name=\"HIGHLIGHT_CONFLICTS\" value=\"true\" />\r\n    <option name=\"HIGHLIGHT_NON_ACTIVE_CHANGELIST\" value=\"false\" />\r\n    <option name=\"LAST_RESOLUTION\" value=\"IGNORE\" />\r\n  </component>\r\n  <component name=\"FileTemplateManagerImpl\">\r\n    <option name=\"RECENT_TEMPLATES\">\r\n      <list>\r\n        <option value=\"spring-beans.schema\" />\r\n        <option value=\"AnnotationType\" />\r\n        <option value=\"Interface\" />\r\n        <option value=\"Class\" />\r\n      </list>\r\n    </option>\r\n  </component>\r\n  <component name=\"Git.Settings\">\r\n    <option name=\"PUSH_TAGS\">\r\n      <GitPushTagMode>\r\n        <option name=\"argument\" value=\"--tags\" />\r\n        <option name=\"title\" value=\"All\" />\r\n      </GitPushTagMode>\r\n    </option>\r\n    <option name=\"RECENT_GIT_ROOT_PATH\" value=\"$PROJECT_DIR$\" />\r\n    <option name=\"SWAP_SIDES_IN_COMPARE_BRANCHES\" value=\"true\" />\r\n  </component>\r\n  <component name=\"Make.Settings\">\r\n    <option name=\"autoScrollToSourceInToolWindow\" value=\"true\" />\r\n  </component>\r\n  <component name=\"MarkdownSettingsMigration\">\r\n    <option name=\"stateVersion\" value=\"1\" />\r\n  </component>\r\n  <component name=\"MavenImportPreferences\">\r\n    <option name=\"generalSettings\">\r\n      <MavenGeneralSettings>\r\n        <option name=\"localRepository\" value=\"D:\\software\\maven\\repository\" />\r\n        <option name=\"mavenHome\" value=\"$PROJECT_DIR$/../../../../software/maven/apache-maven-3.5.4-bin/apache-maven-3.5.4\" />\r\n        <option name=\"userSettingsFile\" value=\"D:\\software\\maven\\apache-maven-3.5.4-bin\\apache-maven-3.5.4\\conf\\settings.xml\" />\r\n      </MavenGeneralSettings>\r\n    </option>\r\n    <option name=\"importingSettings\">\r\n      <MavenImportingSettings>\r\n        <option name=\"jdkForImporter\" value=\"1.8\" />\r\n      </MavenImportingSettings>\r\n    </option>\r\n  </component>\r\n  <component name=\"ProjectColorInfo\">{\r\n  &quot;associatedIndex&quot;: 4\r\n}</component>\r\n  <component name=\"ProjectId\" id=\"2UvrLSjuMNnCRdEf9u8aUkCHXCM\" />\r\n  <component name=\"ProjectLevelVcsManager\" settingsEditedManually=\"true\">\r\n    <ConfirmationsSetting value=\"2\" id=\"Add\" />\r\n  </component>\r\n  <component name=\"ProjectViewState\">\r\n    <option name=\"hideEmptyMiddlePackages\" value=\"true\" />\r\n    <option name=\"showLibraryContents\" value=\"true\" />\r\n  </component>\r\n  <component name=\"PropertiesComponent\">{\r\n  &quot;keyToString&quot;: {\r\n    &quot;RunOnceActivity.OpenProjectViewOnStart&quot;: &quot;true&quot;,\r\n    &quot;RunOnceActivity.ShowReadmeOnStart&quot;: &quot;true&quot;,\r\n    &quot;WebServerToolWindowFactoryState&quot;: &quot;false&quot;,\r\n    &quot;git-widget-placeholder&quot;: &quot;master&quot;,\r\n    &quot;ignore.virus.scanning.warn.message&quot;: &quot;true&quot;,\r\n    &quot;jdk.selected.JAVA_MODULE&quot;: &quot;1.8&quot;,\r\n    &quot;last_opened_file_path&quot;: &quot;D:/Download/project/springboot/spring&quot;,\r\n    &quot;node.js.detected.package.eslint&quot;: &quot;true&quot;,\r\n    &quot;node.js.detected.package.tslint&quot;: &quot;true&quot;,\r\n    &quot;node.js.selected.package.eslint&quot;: &quot;(autodetect)&quot;,\r\n    &quot;node.js.selected.package.tslint&quot;: &quot;(autodetect)&quot;,\r\n    &quot;nodejs_package_manager_path&quot;: &quot;npm&quot;,\r\n    &quot;project.structure.last.edited&quot;: &quot;Modules&quot;,\r\n    &quot;project.structure.proportion&quot;: &quot;0.15&quot;,\r\n    &quot;project.structure.side.proportion&quot;: &quot;0.2&quot;,\r\n    &quot;settings.editor.selected.configurable&quot;: &quot;org.jetbrains.plugins.github.ui.GithubSettingsConfigurable&quot;,\r\n    &quot;spring.configuration.checksum&quot;: &quot;d4d974edf3fcf1049181670f2a1f59d4&quot;,\r\n    &quot;vue.rearranger.settings.migration&quot;: &quot;true&quot;\r\n  },\r\n  &quot;keyToStringList&quot;: {\r\n    &quot;ChangesTree.GroupingKeys&quot;: [\r\n      &quot;directory&quot;,\r\n      &quot;module&quot;\r\n    ]\r\n  }\r\n}</component>\r\n  <component name=\"RecentsManager\">\r\n    <key name=\"CopyFile.RECENT_KEYS\">\r\n      <recent name=\"D:\\Download\\project\\springboot\\spring\\spring-ioc-annotation\\src\\main\\java\\zhou\\huan\\bean\\resource\" />\r\n      <recent name=\"D:\\Download\\project\\springboot\\spring\\spring-ioc-annotation\\src\\main\\resources\" />\r\n      <recent name=\"D:\\Download\\project\\springboot\\spring\\spring-ioc-xml\\src\\main\\resources\" />\r\n    </key>\r\n    <key name=\"MoveFile.RECENT_KEYS\">\r\n      <recent name=\"D:\\Download\\project\\springboot\\spring\" />\r\n    </key>\r\n    <key name=\"MoveClassesOrPackagesDialog.RECENTS_KEY\">\r\n      <recent name=\"\" />\r\n    </key>\r\n  </component>\r\n  <component name=\"RunManager\" selected=\"JUnit.AnnotationAppcationContext.test\">\r\n    <configuration name=\"AnnotationAppcationContext.test\" type=\"JUnit\" factoryName=\"JUnit\" temporary=\"true\" nameIsGenerated=\"true\">\r\n      <module name=\"spring-self_do-Ioc\" />\r\n      <extension name=\"coverage\">\r\n        <pattern>\r\n          <option name=\"PATTERN\" value=\"com.zhang.jie.bean.*\" />\r\n          <option name=\"ENABLED\" value=\"true\" />\r\n        </pattern>\r\n      </extension>\r\n      <option name=\"PACKAGE_NAME\" value=\"com.zhang.jie.bean\" />\r\n      <option name=\"MAIN_CLASS_NAME\" value=\"com.zhang.jie.bean.AnnotationAppcationContext\" />\r\n      <option name=\"METHOD_NAME\" value=\"test\" />\r\n      <option name=\"TEST_OBJECT\" value=\"method\" />\r\n      <method v=\"2\">\r\n        <option name=\"Make\" enabled=\"true\" />\r\n      </method>\r\n    </configuration>\r\n    <configuration name=\"TestCar.test01\" type=\"JUnit\" factoryName=\"JUnit\" temporary=\"true\" nameIsGenerated=\"true\">\r\n      <module name=\"spring-reflect\" />\r\n      <option name=\"PACKAGE_NAME\" value=\"\" />\r\n      <option name=\"MAIN_CLASS_NAME\" value=\"TestCar\" />\r\n      <option name=\"METHOD_NAME\" value=\"test01\" />\r\n      <option name=\"TEST_OBJECT\" value=\"method\" />\r\n      <method v=\"2\">\r\n        <option name=\"Make\" enabled=\"true\" />\r\n      </method>\r\n    </configuration>\r\n    <configuration name=\"TestCar.test02\" type=\"JUnit\" factoryName=\"JUnit\" temporary=\"true\" nameIsGenerated=\"true\">\r\n      <module name=\"spring-reflect\" />\r\n      <option name=\"PACKAGE_NAME\" value=\"\" />\r\n      <option name=\"MAIN_CLASS_NAME\" value=\"TestCar\" />\r\n      <option name=\"METHOD_NAME\" value=\"test02\" />\r\n      <option name=\"TEST_OBJECT\" value=\"method\" />\r\n      <method v=\"2\">\r\n        <option name=\"Make\" enabled=\"true\" />\r\n      </method>\r\n    </configuration>\r\n    <configuration name=\"TestCar.test03\" type=\"JUnit\" factoryName=\"JUnit\" temporary=\"true\" nameIsGenerated=\"true\">\r\n      <module name=\"spring-reflect\" />\r\n      <option name=\"PACKAGE_NAME\" value=\"\" />\r\n      <option name=\"MAIN_CLASS_NAME\" value=\"TestCar\" />\r\n      <option name=\"METHOD_NAME\" value=\"test03\" />\r\n      <option name=\"TEST_OBJECT\" value=\"method\" />\r\n      <method v=\"2\">\r\n        <option name=\"Make\" enabled=\"true\" />\r\n      </method>\r\n    </configuration>\r\n    <configuration name=\"TestCar.test04\" type=\"JUnit\" factoryName=\"JUnit\" temporary=\"true\" nameIsGenerated=\"true\">\r\n      <module name=\"spring-reflect\" />\r\n      <option name=\"PACKAGE_NAME\" value=\"\" />\r\n      <option name=\"MAIN_CLASS_NAME\" value=\"TestCar\" />\r\n      <option name=\"METHOD_NAME\" value=\"test04\" />\r\n      <option name=\"TEST_OBJECT\" value=\"method\" />\r\n      <method v=\"2\">\r\n        <option name=\"Make\" enabled=\"true\" />\r\n      </method>\r\n    </configuration>\r\n    <list>\r\n      <item itemvalue=\"JUnit.AnnotationAppcationContext.test\" />\r\n      <item itemvalue=\"JUnit.TestCar.test01\" />\r\n      <item itemvalue=\"JUnit.TestCar.test02\" />\r\n      <item itemvalue=\"JUnit.TestCar.test03\" />\r\n      <item itemvalue=\"JUnit.TestCar.test04\" />\r\n    </list>\r\n    <recent_temporary>\r\n      <list>\r\n        <item itemvalue=\"JUnit.AnnotationAppcationContext.test\" />\r\n        <item itemvalue=\"JUnit.TestCar.test04\" />\r\n        <item itemvalue=\"JUnit.TestCar.test03\" />\r\n        <item itemvalue=\"JUnit.TestCar.test02\" />\r\n        <item itemvalue=\"JUnit.TestCar.test01\" />\r\n      </list>\r\n    </recent_temporary>\r\n  </component>\r\n  <component name=\"SpellCheckerSettings\" RuntimeDictionaries=\"0\" Folders=\"0\" CustomDictionaries=\"0\" DefaultDictionary=\"application-level\" UseSingleDictionary=\"true\" transferred=\"true\" />\r\n  <component name=\"TaskManager\">\r\n    <task active=\"true\" id=\"Default\" summary=\"Default task\">\r\n      <changelist id=\"17dbe8b4-afbc-49e7-869b-4ac8e2f9f663\" name=\"Changes\" comment=\"\" />\r\n      <created>1693830838966</created>\r\n      <option name=\"number\" value=\"Default\" />\r\n      <option name=\"presentableId\" value=\"Default\" />\r\n      <updated>1693830838966</updated>\r\n      <workItem from=\"1693830840597\" duration=\"2729000\" />\r\n      <workItem from=\"1693833606799\" duration=\"739000\" />\r\n      <workItem from=\"1693919304783\" duration=\"1846000\" />\r\n      <workItem from=\"1693922705717\" duration=\"5210000\" />\r\n      <workItem from=\"1694093364270\" duration=\"813000\" />\r\n      <workItem from=\"1694176582577\" duration=\"3561000\" />\r\n      <workItem from=\"1694180181623\" duration=\"912000\" />\r\n      <workItem from=\"1694263073737\" duration=\"3983000\" />\r\n      <workItem from=\"1694438354118\" duration=\"1805000\" />\r\n      <workItem from=\"1694522522676\" duration=\"3902000\" />\r\n      <workItem from=\"1694608989388\" duration=\"211000\" />\r\n      <workItem from=\"1694609233787\" duration=\"3449000\" />\r\n      <workItem from=\"1694694733500\" duration=\"4458000\" />\r\n      <workItem from=\"1694776715944\" duration=\"8877000\" />\r\n      <workItem from=\"1694859041474\" duration=\"1246000\" />\r\n      <workItem from=\"1694860790903\" duration=\"767000\" />\r\n      <workItem from=\"1694861711981\" duration=\"1023000\" />\r\n      <workItem from=\"1694864988561\" duration=\"632000\" />\r\n      <workItem from=\"1694871713311\" duration=\"12351000\" />\r\n    </task>\r\n    <task id=\"LOCAL-00001\" summary=\"2023年9月16日\">\r\n      <option name=\"closed\" value=\"true\" />\r\n      <created>1694865570986</created>\r\n      <option name=\"number\" value=\"00001\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00001\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1694865570986</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00002\" summary=\"2023年9月16日\">\r\n      <option name=\"closed\" value=\"true\" />\r\n      <created>1694873038937</created>\r\n      <option name=\"number\" value=\"00002\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00002\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1694873038937</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00003\" summary=\"2023年9月16日\">\r\n      <option name=\"closed\" value=\"true\" />\r\n      <created>1694873146426</created>\r\n      <option name=\"number\" value=\"00003\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00003\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1694873146426</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00004\" summary=\"2023年9月16日\">\r\n      <option name=\"closed\" value=\"true\" />\r\n      <created>1694873324082</created>\r\n      <option name=\"number\" value=\"00004\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00004\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1694873324082</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00005\" summary=\"2023年9月16日\">\r\n      <option name=\"closed\" value=\"true\" />\r\n      <created>1694875480269</created>\r\n      <option name=\"number\" value=\"00005\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00005\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1694875480269</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00006\" summary=\"2023年9月16日\">\r\n      <option name=\"closed\" value=\"true\" />\r\n      <created>1694876179234</created>\r\n      <option name=\"number\" value=\"00006\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00006\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1694876179234</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00007\" summary=\"2023年9月16日\">\r\n      <option name=\"closed\" value=\"true\" />\r\n      <created>1694878468240</created>\r\n      <option name=\"number\" value=\"00007\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00007\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1694878468241</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00008\" summary=\"2023年9月16日\">\r\n      <option name=\"closed\" value=\"true\" />\r\n      <created>1694880644982</created>\r\n      <option name=\"number\" value=\"00008\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00008\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1694880644982</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00009\" summary=\"2023年9月17日\">\r\n      <option name=\"closed\" value=\"true\" />\r\n      <created>1694881630823</created>\r\n      <option name=\"number\" value=\"00009\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00009\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1694881630823</updated>\r\n    </task>\r\n    <option name=\"localTasksCounter\" value=\"10\" />\r\n    <servers />\r\n  </component>\r\n  <component name=\"TypeScriptGeneratedFilesManager\">\r\n    <option name=\"version\" value=\"3\" />\r\n  </component>\r\n  <component name=\"Vcs.Log.Tabs.Properties\">\r\n    <option name=\"TAB_STATES\">\r\n      <map>\r\n        <entry key=\"MAIN\">\r\n          <value>\r\n            <State>\r\n              <option name=\"FILTERS\">\r\n                <map>\r\n                  <entry key=\"branch\">\r\n                    <value>\r\n                      <list>\r\n                        <option value=\"origin/master\" />\r\n                      </list>\r\n                    </value>\r\n                  </entry>\r\n                </map>\r\n              </option>\r\n            </State>\r\n          </value>\r\n        </entry>\r\n      </map>\r\n    </option>\r\n  </component>\r\n  <component name=\"VcsManagerConfiguration\">\r\n    <MESSAGE value=\"2023年9月16日\" />\r\n    <MESSAGE value=\"2023年9月17日\" />\r\n    <option name=\"LAST_COMMIT_MESSAGE\" value=\"2023年9月17日\" />\r\n  </component>\r\n  <component name=\"XSLT-Support.FileAssociations.UIState\">\r\n    <expand />\r\n    <select />\r\n  </component>\r\n</project>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/workspace.xml b/.idea/workspace.xml
--- a/.idea/workspace.xml	(revision 1a2da8958760c6b7dc62c5534b2f486302424564)
+++ b/.idea/workspace.xml	(date 1695102948741)
@@ -4,15 +4,9 @@
     <option name="autoReloadType" value="SELECTIVE" />
   </component>
   <component name="ChangeListManager">
-    <list default="true" id="17dbe8b4-afbc-49e7-869b-4ac8e2f9f663" name="Changes" comment="2023年9月17日">
-      <change afterPath="$PROJECT_DIR$/spring-self_do-Ioc/src/main/java/com/zhang/jie/anno/Bean.java" afterDir="false" />
-      <change afterPath="$PROJECT_DIR$/spring-self_do-Ioc/src/main/java/com/zhang/jie/anno/Di.java" afterDir="false" />
-      <change afterPath="$PROJECT_DIR$/spring-self_do-Ioc/src/main/java/com/zhang/jie/bean/AnnotationAppcationContext.java" afterDir="false" />
-      <change afterPath="$PROJECT_DIR$/spring-self_do-Ioc/src/main/java/com/zhang/jie/bean/ApplicationContext.java" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/.idea/compiler.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/compiler.xml" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/.idea/encodings.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/encodings.xml" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/.idea/workspace.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/workspace.xml" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/spring-self_do-Ioc/pom.xml" beforeDir="false" afterPath="$PROJECT_DIR$/spring-self_do-Ioc/pom.xml" afterDir="false" />
+    <list default="true" id="17dbe8b4-afbc-49e7-869b-4ac8e2f9f663" name="Changes" comment="2023年9月19日">
+      <change afterPath="$PROJECT_DIR$/.idea/dictionaries/zhouhuanping.xml" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/ReadMe.md" beforeDir="false" afterPath="$PROJECT_DIR$/ReadMe.md" afterDir="false" />
     </list>
     <option name="SHOW_DIALOG" value="false" />
     <option name="HIGHLIGHT_CONFLICTS" value="true" />
@@ -30,6 +24,7 @@
     </option>
   </component>
   <component name="Git.Settings">
+    <option name="PUSH_AUTO_UPDATE" value="true" />
     <option name="PUSH_TAGS">
       <GitPushTagMode>
         <option name="argument" value="--tags" />
@@ -70,34 +65,34 @@
     <option name="hideEmptyMiddlePackages" value="true" />
     <option name="showLibraryContents" value="true" />
   </component>
-  <component name="PropertiesComponent">{
-  &quot;keyToString&quot;: {
-    &quot;RunOnceActivity.OpenProjectViewOnStart&quot;: &quot;true&quot;,
-    &quot;RunOnceActivity.ShowReadmeOnStart&quot;: &quot;true&quot;,
-    &quot;WebServerToolWindowFactoryState&quot;: &quot;false&quot;,
-    &quot;git-widget-placeholder&quot;: &quot;master&quot;,
-    &quot;ignore.virus.scanning.warn.message&quot;: &quot;true&quot;,
-    &quot;jdk.selected.JAVA_MODULE&quot;: &quot;1.8&quot;,
-    &quot;last_opened_file_path&quot;: &quot;D:/Download/project/springboot/spring&quot;,
-    &quot;node.js.detected.package.eslint&quot;: &quot;true&quot;,
-    &quot;node.js.detected.package.tslint&quot;: &quot;true&quot;,
-    &quot;node.js.selected.package.eslint&quot;: &quot;(autodetect)&quot;,
-    &quot;node.js.selected.package.tslint&quot;: &quot;(autodetect)&quot;,
-    &quot;nodejs_package_manager_path&quot;: &quot;npm&quot;,
-    &quot;project.structure.last.edited&quot;: &quot;Modules&quot;,
-    &quot;project.structure.proportion&quot;: &quot;0.15&quot;,
-    &quot;project.structure.side.proportion&quot;: &quot;0.2&quot;,
-    &quot;settings.editor.selected.configurable&quot;: &quot;org.jetbrains.plugins.github.ui.GithubSettingsConfigurable&quot;,
-    &quot;spring.configuration.checksum&quot;: &quot;d4d974edf3fcf1049181670f2a1f59d4&quot;,
-    &quot;vue.rearranger.settings.migration&quot;: &quot;true&quot;
+  <component name="PropertiesComponent"><![CDATA[{
+  "keyToString": {
+    "RunOnceActivity.OpenProjectViewOnStart": "true",
+    "RunOnceActivity.ShowReadmeOnStart": "true",
+    "WebServerToolWindowFactoryState": "false",
+    "git-widget-placeholder": "Rebasing master",
+    "ignore.virus.scanning.warn.message": "true",
+    "jdk.selected.JAVA_MODULE": "1.8",
+    "last_opened_file_path": "D:/Download/project/springboot/spring",
+    "node.js.detected.package.eslint": "true",
+    "node.js.detected.package.tslint": "true",
+    "node.js.selected.package.eslint": "(autodetect)",
+    "node.js.selected.package.tslint": "(autodetect)",
+    "nodejs_package_manager_path": "npm",
+    "project.structure.last.edited": "Modules",
+    "project.structure.proportion": "0.15",
+    "project.structure.side.proportion": "0.2",
+    "settings.editor.selected.configurable": "org.jetbrains.plugins.github.ui.GithubSettingsConfigurable",
+    "spring.configuration.checksum": "d4d974edf3fcf1049181670f2a1f59d4",
+    "vue.rearranger.settings.migration": "true"
   },
-  &quot;keyToStringList&quot;: {
-    &quot;ChangesTree.GroupingKeys&quot;: [
-      &quot;directory&quot;,
-      &quot;module&quot;
+  "keyToStringList": {
+    "ChangesTree.GroupingKeys": [
+      "directory",
+      "module"
     ]
   }
-}</component>
+}]]></component>
   <component name="RecentsManager">
     <key name="CopyFile.RECENT_KEYS">
       <recent name="D:\Download\project\springboot\spring\spring-ioc-annotation\src\main\java\zhou\huan\bean\resource" />
@@ -186,6 +181,9 @@
     </recent_temporary>
   </component>
   <component name="SpellCheckerSettings" RuntimeDictionaries="0" Folders="0" CustomDictionaries="0" DefaultDictionary="application-level" UseSingleDictionary="true" transferred="true" />
+  <component name="SvnConfiguration">
+    <configuration>C:\Users\zhouhuanping\AppData\Roaming\Subversion</configuration>
+  </component>
   <component name="TaskManager">
     <task active="true" id="Default" summary="Default task">
       <changelist id="17dbe8b4-afbc-49e7-869b-4ac8e2f9f663" name="Changes" comment="" />
@@ -285,7 +283,15 @@
       <option name="project" value="LOCAL" />
       <updated>1694881630823</updated>
     </task>
-    <option name="localTasksCounter" value="10" />
+    <task id="LOCAL-00010" summary="2023年9月19日">
+      <option name="closed" value="true" />
+      <created>1695102059694</created>
+      <option name="number" value="00010" />
+      <option name="presentableId" value="LOCAL-00010" />
+      <option name="project" value="LOCAL" />
+      <updated>1695102059694</updated>
+    </task>
+    <option name="localTasksCounter" value="11" />
     <servers />
   </component>
   <component name="TypeScriptGeneratedFilesManager">
@@ -317,7 +323,8 @@
   <component name="VcsManagerConfiguration">
     <MESSAGE value="2023年9月16日" />
     <MESSAGE value="2023年9月17日" />
-    <option name="LAST_COMMIT_MESSAGE" value="2023年9月17日" />
+    <MESSAGE value="2023年9月19日" />
+    <option name="LAST_COMMIT_MESSAGE" value="2023年9月19日" />
   </component>
   <component name="XSLT-Support.FileAssociations.UIState">
     <expand />
